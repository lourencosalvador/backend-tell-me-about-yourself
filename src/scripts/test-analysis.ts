import { prisma } from "../lib/prisma";
import { sendToAnalysis } from "../services/analysis-service";
import { transcriptionsMock } from "../constants/transcription-mocks";

async function testAnalysisAndUpdateRecommendation(userId: string) {
    try {
        const analysisResult = await sendToAnalysis(transcriptionsMock);

        console.log("\nüì¢ **An√°lise do Perfil do Estudante:**");
        console.log(analysisResult);

        const updatedUser = await prisma.user.update({
            where: { id: userId },
            data: { recommendation: JSON.stringify(analysisResult) }
        });
        console.log(`‚úÖ Usu√°rio com ID ${userId} atualizado com a recomenda√ß√£o.`);
        return updatedUser;
    } catch (error) {
        console.error("Erro ao realizar an√°lise ou atualizar o usu√°rio:", error);
        throw new Error("Falha na an√°lise ou atualiza√ß√£o do usu√°rio.");
    }
}

testAnalysisAndUpdateRecommendation("e40d5be4-bbed-483a-b63a-5555e8ce9257");
